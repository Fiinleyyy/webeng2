import { MapContainer, TileLayer } from 'react-leaflet';
import 'leaflet/dist/leaflet.css';
import Routing from './Routing';
import React, { useState } from "react";
import DragSheetMobile from './DragSheetMobile';
import GetGeoLocation from './GetGeoLocation';
import NominatemRouting from './SelectRoute';
import { useReverseGeocodeOnRouteInfo } from './ReverseGeocoding';


// This is the main componente where all components of the PWA come together

const MapComponent = () => {

  // State that indicates whether the DragSheet is open or closed
  const [isOpen, setOpen] = useState(false);

  // State to store the current Location of the user or if it couldnt be gathered an error
  const [myLocation, setMyLocation] = useState({
    latitude: null,
    longitude: null,
    error: null
  });

  // State that stores the coordinates of the routes destination
  const [destination, setDestination] = useState(null);

  // State that stores the coordinates of the routes start if its not the users current location
  const [start, setStart] = useState(null)

  // This is the State where the Route Information (distance, time and coordinates of the destination) is stored
  const [routeInfo, setRouteInfo] = useState(null);

  // In this variable, the Reversed Geocode data of the routes destination is given to the main component
  const geocodeInfo = useReverseGeocodeOnRouteInfo(routeInfo);

  // This State stores the destination coordinates when the route is generated by clicking or touching and not using the input fields
  const [destinationCoord, setDestinationCoord] = useState(null)

  return (
    <>
      <NominatemRouting setDestination={setDestination} myLocation={myLocation} setStart={setStart} destinationCoord={destinationCoord} />
      <GetGeoLocation setMyLocation={setMyLocation} />
      <DragSheetMobile
        isOpen={isOpen}
        setOpen={setOpen}
        routeInfo={routeInfo}
        geocodeInfo={geocodeInfo}
      />
      <MapContainer
        center={[47,9]}
        zoom={10}
        style={{ height: '100vh', width: '100vw' }}
        className="map"
      >
        <TileLayer
          attribution='&copy; <a href="https://osm.org/copyright">OpenStreetMap</a> contributors'
          url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
        />
        <Routing
          setOpen={setOpen}
          setRouteInfo={setRouteInfo}
          myLocation={myLocation}
          destination={destination}
          start={start}
          setDestinationCoord={setDestinationCoord}
        />
      </MapContainer>
    </>
  );
};

export default MapComponent;
